# Branches that trigger a build on commit
trigger:
- master
- master-vs-deps
- release/*
- features/*
- demos/*

# Branches that trigger builds on PR
pr:
- master
- master-vs-deps
- release/*
- features/*
- demos/*

jobs:

- job: Linux_Test
  pool:
   name: NetCorePublic-Pool
   queue: BuildPool.Ubuntu.1604.amd64.Open
  strategy:
    maxParallel: 2
    matrix:
      coreclr:
        _args: --testCoreClr --docker
        _name: CoreClr
        _configuration: Debug
# Disabling Mono while https://github.com/mono/mono/issues/16373 is worked out
#      mono:
#        _args: --testMono --docker
#        _name: Mono
#        _configuration: Debug
  timeoutInMinutes: 90
  steps:
    - script: ./eng/cibuild.sh --configuration $(_configuration) --prepareMachine $(_args)
      displayName: Build and Test
    - task: PublishTestResults@2
      displayName: Publish xUnit Test Results
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_configuration)/*.xml'
        mergeTestResults: true
        testRunTitle: 'Linux $(_name)'
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_configuration)'
        ArtifactName: 'Linux $(_name)'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

- job: SourceBuild_Test
  pool:
   name: NetCorePublic-Pool
   queue: BuildPool.Ubuntu.1604.amd64.Open
  timeoutInMinutes: 90
  steps:
    - script: ./eng/cibuild.sh --configuration Debug --prepareMachine --docker --sourceBuild
      displayName: Build
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/Debug'
        ArtifactName: 'SourceBuild_Test'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

#- job: macOS_Test
#  pool:
#    vmImage: 'macOS-10.14'
#  timeoutInMinutes: 90
#
#  steps:
#    - script: ./eng/cibuild.sh --configuration Debug --prepareMachine --testCoreClr
#      displayName: Build and Test
#
#    - task: PublishTestResults@2
#      displayName: Publish xUnit Test Results
#      inputs:
#        testRunner: XUnit
#        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/Debug/*.xml'
#        mergeTestResults: true
#        testRunTitle: 'macOS CoreClr'
#      condition: always()
#
#    - task: PublishBuildArtifacts@1
#      displayName: Publish Logs
#      inputs:
#        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/Debug'
#        ArtifactName: 'macOS CoreClr'
#        publishLocation: Container
#      continueOnError: true
#      condition: not(succeeded())

